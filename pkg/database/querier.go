// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package database

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	//CountOrders
	//
	//  SELECT COUNT(*)
	//  FROM orders
	CountOrders(ctx context.Context) (int64, error)
	//CreateMigration
	//
	//  INSERT INTO migration (id, applied)
	//  VALUES ($1, $2) RETURNING id
	CreateMigration(ctx context.Context, arg CreateMigrationParams) (string, error)
	//CreateOrder
	//
	//  INSERT INTO orders (id, table_id, client_name, client_comment, status, seen, items)
	//  VALUES ($1, $2, $3, $4, $5, $6, $7)
	//  RETURNING id, index, table_id, created, updated, status, client_name, client_comment, seen, items
	CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error)
	//CreateProduct
	//
	//  INSERT INTO products (id, group_id, title, description, price, index)
	//  VALUES ($1, $2::UUID, $3, $4, $5,
	//          (SELECT COALESCE(MAX(index), 0) + 1 FROM products WHERE group_id = $2::UUID) )
	CreateProduct(ctx context.Context, arg CreateProductParams) error
	//CreateProductGroup
	//
	//  INSERT INTO product_groups (id, menu_id, title, index)
	//  VALUES ($1, $2::VARCHAR(255), $3,
	//          (SELECT COALESCE(MAX(index), 0) + 1 FROM product_groups WHERE menu_id = $2:: VARCHAR (255)) )
	CreateProductGroup(ctx context.Context, arg CreateProductGroupParams) error
	//DeleteOrder
	//
	//  DELETE
	//  FROM orders
	//  WHERE id = $1
	DeleteOrder(ctx context.Context, id uuid.UUID) error
	//DeleteProduct
	//
	//  DELETE
	//  FROM products
	//  WHERE id = $1
	DeleteProduct(ctx context.Context, id uuid.UUID) error
	//DeleteProductGroup
	//
	//  DELETE
	//  FROM product_groups
	//  WHERE id = $1
	DeleteProductGroup(ctx context.Context, id uuid.UUID) error
	//GetAllProductGroups
	//
	//  SELECT id, menu_id, index, title, created, updated
	//  FROM product_groups
	//  ORDER BY index
	GetAllProductGroups(ctx context.Context) ([]ProductGroup, error)
	//GetAllProducts
	//
	//  SELECT id, group_id, index, title, description, price, available, created, updated
	//  FROM products
	//  ORDER BY available DESC, index, group_id
	GetAllProducts(ctx context.Context) ([]Product, error)
	//GetMenus
	//
	//  SELECT id, title, created
	//  FROM menu
	//  ORDER BY created
	GetMenus(ctx context.Context) ([]Menu, error)
	//GetMigrations
	//
	//  SELECT id, applied
	//  FROM migration
	//  ORDER BY id
	GetMigrations(ctx context.Context) ([]Migration, error)
	//GetOrderByID
	//
	//  SELECT id, index, table_id, created, updated, status, client_name, client_comment, seen, items
	//  FROM orders
	//  WHERE id = $1
	GetOrderByID(ctx context.Context, id uuid.UUID) (Order, error)
	//GetOrdersPaginated
	//
	//  SELECT id, index, table_id, created, updated, status, client_name, client_comment, seen, items
	//  FROM orders
	//  ORDER BY index DESC
	//  OFFSET $1 LIMIT $2
	GetOrdersPaginated(ctx context.Context, arg GetOrdersPaginatedParams) ([]Order, error)
	//GetParams
	//
	//  SELECT id, header_text, header_deadline
	//  FROM params
	//  WHERE id = 1
	GetParams(ctx context.Context) (Param, error)
	//GetProductByID
	//
	//  SELECT id, group_id, index, title, description, price, available, created, updated
	//  FROM products
	//  WHERE id = $1
	GetProductByID(ctx context.Context, id uuid.UUID) (Product, error)
	//GetProductGroupByID
	//
	//  SELECT id, menu_id, index, title, created, updated
	//  FROM product_groups
	//  WHERE id = $1
	GetProductGroupByID(ctx context.Context, id uuid.UUID) (ProductGroup, error)
	//GetProductsByGroup
	//
	//  SELECT id, group_id, index, title, description, price, available, created, updated
	//  FROM products
	//  WHERE group_id = $1
	//  ORDER BY index
	GetProductsByGroup(ctx context.Context, groupID uuid.UUID) ([]Product, error)
	//SearchProducts
	//
	//  SELECT id, group_id, index, title, description, price, available, created, updated
	//  FROM products
	//  WHERE (title ILIKE '%' || $1 || '%' OR description ILIKE '%' || $1 || '%')
	//    AND available = true
	//  ORDER BY title
	SearchProducts(ctx context.Context, dollar_1 *string) ([]Product, error)
	//SetOrderSeen
	//
	//  UPDATE orders
	//  SET seen    = true,
	//      updated = CURRENT_TIMESTAMP
	//  WHERE id = $1
	SetOrderSeen(ctx context.Context, id uuid.UUID) error
	//SetParamsHeader
	//
	//  UPDATE params
	//  SET header_text = $1,
	//      header_deadline = $2
	//  WHERE id = 1
	SetParamsHeader(ctx context.Context, arg SetParamsHeaderParams) error
	//SetProductAvailability
	//
	//  UPDATE products
	//  SET available = $2,
	//      updated   = CURRENT_TIMESTAMP
	//  WHERE id = $1
	SetProductAvailability(ctx context.Context, arg SetProductAvailabilityParams) error
	//UpdateOrderStatus
	//
	//  UPDATE orders
	//  SET status  = $2,
	//      updated = CURRENT_TIMESTAMP
	//  WHERE id = $1
	UpdateOrderStatus(ctx context.Context, arg UpdateOrderStatusParams) error
	//UpdateProduct
	//
	//  UPDATE products
	//  SET title       = $2,
	//      description = $3,
	//      price       = $4,
	//      available   = $5,
	//      updated     = CURRENT_TIMESTAMP
	//  WHERE id = $1
	UpdateProduct(ctx context.Context, arg UpdateProductParams) error
	//UpdateProductGroup
	//
	//  UPDATE product_groups
	//  SET title   = $2,
	//      updated = CURRENT_TIMESTAMP
	//  WHERE id = $1
	UpdateProductGroup(ctx context.Context, arg UpdateProductGroupParams) error
	//UpdateProductGroupIndex
	//
	//  UPDATE product_groups
	//  SET index   = $2,
	//      updated = CURRENT_TIMESTAMP
	//  WHERE id = $1
	UpdateProductGroupIndex(ctx context.Context, arg UpdateProductGroupIndexParams) error
	//UpdateProductIndex
	//
	//  UPDATE products
	//  SET index   = $2,
	//      updated = CURRENT_TIMESTAMP
	//  WHERE id = $1
	UpdateProductIndex(ctx context.Context, arg UpdateProductIndexParams) error
}

var _ Querier = (*Queries)(nil)
